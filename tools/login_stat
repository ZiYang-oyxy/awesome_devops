#!/usr/bin/env python
# -*- coding: utf-8 -*-

import re
import argparse
import subprocess
from collections import defaultdict
from datetime import datetime, timedelta

parser = argparse.ArgumentParser()
parser.add_argument('-d', '--days', type=int, default=15, help='Number of days to be counted')
args = parser.parse_args()
count_day = args.days

# 初始化一个字典，用于统计每天的登录次数
login_count = defaultdict(int)

now = datetime.now()

process = subprocess.Popen(['last', '-FR'], stdout=subprocess.PIPE)
output, error = process.communicate()
lines = output.decode('utf-8').splitlines()

# 遍历每一行日志
for line in lines:
    # 提取日志中的日期
    # 示例：chenyanl pts/66       Mon May 22 11:23:27 2023 - Mon May 22 12:43:07 2023  (01:19)
    match = re.search(r'\w{3} \w{3} \s{0,1}\d{1,2} \d{2}:\d{2}:\d{2} \d{4} ', line)
    if match:
        start_time = datetime.strptime(match.group(0), "%a %b %d %H:%M:%S %Y ")
        if now - start_time >= timedelta(days=count_day):
            continue
        start_time_str = start_time.strftime("%Y%m%d")
        # 提取日志中的最后一列
        last = line.split()[-1]
        # 判断是否是有效登录
        if last != "(00:00)":
            # 统计该日期的登录次数
            login_count[start_time_str] += 1
#    else:
#        print("not match: " + line)

total = 0
sorted_dict = sorted(login_count.items(), key=lambda t: t[0])


print("Day,LoginCount")
for date, count in sorted_dict:
    print("%s,%d" % (date, count))
    total += count

print("\nTotal:%d" % total)
