#!/bin/bash
#
# Awesome Devops (or yet another AirDrop)
#
# Copyright © 2021 Ouyang Xiongyi. All Rights Reserved.
#

_curdir="`dirname $(readlink -f $0)`"
source $_curdir/lib/common.sh

put()
{
    if [[ ! -f $1 ]]; then
        cecho -R "No such file"
        exit 1
    fi
    _name=`basename $1`
    _r_file=${2:-$_name}
    curl -T $1 $PUTURL/$_r_file > /dev/null
    if [[ $? -eq 0 ]]; then
        _res=(`md5sum $1`)
        cecho -Y "${_res[0]}"
        cecho -G "$GETURL/$_r_file"
        cecho -M "ad get $_r_file"
    fi
}

# [Comparison of Compression Algorithms]
# https://linuxreviews.org/Comparison_of_Compression_Algorithms
dput()
{
    # “:”会被tar认为是远程服务器
    if [[ $1 =~ .*:.* ]]; then
        cecho -R "not allow directory contain \":\""
        exit 1
    fi
    if [[ ! -d $1 ]]; then
        cecho -R "No such directory"
        exit 1
    fi
    _name=`basename $1`
    _parent=`dirname $1`
    if (type pigz >/dev/null 2>&1); then
        tar c -C $_parent --exclude='.git' -f - $_name | pigz > $_name.tgz
    else
        tar c -C $_parent --exclude='.git' -z -f $_name.tgz $_name
    fi
    curl -T $_name.tgz $PUTURL/$_name.tgz > /dev/null
    if [[ $? -eq 0 ]]; then
        _res=(`md5sum $_name.tgz`)
        cecho -Y "${_res[0]}"
        cecho -G "$GETURL/$_name.tgz"
        cecho -M "ad dget $_name"
    fi
    rm $_name.tgz
}

# [Comparison of Compression Algorithms]
# https://linuxreviews.org/Comparison_of_Compression_Algorithms
dgput()
{
    # “:”会被tar认为是远程服务器
    if [[ $1 =~ .*:.* ]]; then
        cecho -R "not allow directory contain \":\""
        exit 1
    fi
    if [[ ! -d $1 ]]; then
        cecho -R "No such directory"
        exit 1
    fi
    _name=`basename $1`
    _parent=`dirname $1`
    if (type pigz >/dev/null 2>&1); then
        tar c -C $_parent -f - $_name | pigz > $_name.tgz
    else
        tar c -C $_parent -z -f $_name.tgz $_name
    fi
    curl -T $_name.tgz $PUTURL/$_name.tgz > /dev/null
    if [[ $? -eq 0 ]]; then
        _res=(`md5sum $_name.tgz`)
        cecho -Y "${_res[0]}"
        cecho -G "$GETURL/$_name.tgz"
        cecho -M "ad dget $_name"
    fi
    rm $_name.tgz
}

tput()
{
    if [[ ! -f $1 ]]; then
        cecho -R "No such file"
        exit 1
    fi
    _name=`basename $1`
    _r_file=`date '+%Y-%m-%d_%H-%M-%S'`_${2:-$_name}
    curl -T $1 $PUTURL/$_r_file > /dev/null
    if [[ $? -eq 0 ]]; then
        _res=(`md5sum $1`)
        cecho -Y "${_res[0]}"
        cecho -G "$GETURL/$_r_file"
        cecho -M "ad get $_r_file"
    fi
}

get()
{
    _l_file=${2:-$1}
    curl -fo $_l_file $GETURL/$1
    if [[ ! $? -eq 0 ]]; then
        rm -f $_l_file
        cecho -R "No such file"
        exit 1
    fi
    _res=(`md5sum $_l_file`)
    cecho -Y "${_res[0]}"
    cecho -G "`readlink -f $_l_file`"
}

dget()
{
    # “:”会被tar认为是远程服务器
    if [[ $1 =~ .*:.* ]]; then
        cecho -R "not allow directory contain \":\""
        exit 1
    fi
    curl -fo $1.tgz $GETURL/$1.tgz
    if [[ ! $? -eq 0 ]]; then
        rm -f $1.tgz
        cecho -R "No such directory"
        exit 1
    fi
    tar x -o -f $1.tgz
    _res=(`md5sum $1.tgz`)
    cecho -Y "${_res[0]}"
    cecho -G "`readlink -f $1`"
    rm $1.tgz
}

upgrade()
{
    bash <(curl -s $GETURL/@aadi@)
}

ad_tree()
{
    tree -C $_curdir -I '.git|vim' -L 3
}

vim_init()
{
    ad cecho -g "ad vim initialize ..."
    cd $_curdir/
    ad get @vim_bundle.tgz@
    tar xf @vim_bundle.tgz@
    _vim_ver=`vim --version | awk '/Vi IMproved / {print $5}'`
    # 非arm（macos），并且支持版本很低，这使用预制vim
    if [[ $(echo "$_vim_ver < 9.0" | bc -l) ]] && [[ ! $(vim --version | grep -q arm64) ]]; then
        ad get @vim9.0_x86@ vim/vim
        chmod +x vim/vim
        ad get @vimdiff9.0_x86@ vim/vimdiff
        chmod +x vim/vimdiff
        # 从 /usr/local/share/vim/vim90 中获得
        ad get @vim90_x86.tgz@
        tar xf @vim90_x86.tgz@
        mv vim90 vim/vim90
        echo "export VIMRUNTIME=~/.awesome_devops/vim/vim90" > vim/.env
    fi
    touch vim/.env
}

ad_vim()
{
    [ ! -f $_curdir/vim/.env ] && vim_init
    source $_curdir/vim/.env
    if [ -f $_curdir/vim/vim ]; then
        $_curdir/vim/vim -u $_curdir/vim/.vimrc "$@"
    else
        vim -u $_curdir/vim/.vimrc "$@"
    fi
}

ad_vimdiff()
{
    [ ! -f $_curdir/vim/.env ] && vim_init
    source $_curdir/vim/.env
    if [ -f $_curdir/vim/vimdiff ]; then
        $_curdir/vim/vimdiff -u $_curdir/vim/.vimrc "$@"
    else
        vimdiff -u $_curdir/vim/.vimrc "$@"
    fi
}

uninstall()
{
    rm -f ~/tmp/awesome_devops.tar ~/bin/ad
    rm -rf ~/.awesome_devops ~/.awesome_devops.bak
    sed -i '/ad-completion.bash/d' ~/.bashrc
    sed -i '/@ad_plugins@/d' ~/.bashrc
    echo "uninstall success"
}

new_version_detect()
{
    _old=`cat $_curdir/latest_version`
    _new=`curl --connect-timeout 1 -f $GETURL/'@latest_version@' 2>/dev/null`

    if [[ ! $? -eq 0 ]]; then
        cecho -Gy 'Unable to connect to ad server'
    fi

    if [[ $_new -gt $_old ]]; then
        cecho -g 'A new version is available! Run "ad upgrade"'
    fi
}

usage(){

    cat <<__EOF__

⚙ Awesome Devops (or yet another AirDrop) ⚙

Usage:  ad [ COMMAND | TOOL | PLUGIN ] [ ARGUMENT ]

    BASIC COMMAND:
        help      # this message
        upgrade   # upgrade to latest version
        uninstall # leave no trace
        vim       # my vim
        tree      # prints out ad directory in a tree-like display
        [ put | tput | get ] <file>
        [ dput | dgput | dget ] <directory>

    TOOL:
__EOF__
    for i in `ls $_curdir/tools/`; do
        if [[ -d $_curdir/tools/$i ]]; then
            echo "        $i/"
        else
            echo "        $i"
        fi
    done

    cat <<__EOF__

    EXTERNAL TOOL:
__EOF__
    for i in `ls $_curdir/ext_tools/`; do
        if [[ -d $_curdir/ext_tools/$i ]]; then
            echo "        $i/"
        else
            echo "        $i"
        fi
    done

    cat <<__EOF__

    PLUGIN install:
__EOF__
    for i in `ls $_curdir/plugins/`; do
        echo "        deploy ${i##*/}"
    done

    cat <<__EOF__

Upload link:
$PUTURL

Install or Upgrade:
bash <(curl -s $GETURL/@aadi@) && source ~/.bashrc

Home page:
$SERVEFILE_URL
__EOF__

    new_version_detect

    [ "$_action" == "help" ] && exit 0 || exit 1
}

_action=$1; shift;

if [[ -z $_action ]]; then
    usage
    exit 1
fi

case $_action in
    put | get | dput | dgput | dget | tput | upgrade | uninstall)
        $_action "$@"
        ;;
    help)
        usage
        ;;
    tree)
        ad_tree
        ;;
    vim)
        ad_vim "$@"
        ;;
    vimdiff)
        ad_vimdiff "$@"
        ;;
    deploy)
        _plugin=$1
        if [[ -z $_plugin ]]; then
            cecho -R "no plugin is specified! Select one:"
            for i in `ls $_curdir/plugins/`; do
                echo "${i##*/}"
            done
            exit 1
        fi
        $_curdir/plugins/$_plugin/install
        ;;
    ex)
        # install my experimental tool, will not be displayed in usage
        $_curdir/experimental/$1/install
        ;;
    *)
        # 无目录工具，直接执行
        if [[ -f $_curdir/tools/$_action ]]; then
            $_curdir/tools/$_action "$@"
        elif [[ -f $_curdir/ext_tools/$_action ]]; then
            $_curdir/ext_tools/$_action "$@"
        # 有目录工具，目录与工具名必须同名，直接执行
        elif [[ -f $_curdir/tools/$_action/$_action ]]; then
            $_curdir/tools/$_action/$_action "$@"
        elif [[ -f $_curdir/ext_tools/$_action/$_action ]]; then
            $_curdir/ext_tools/$_action/$_action "$@"
        # 有目录工具，目录与工具名不同名，一般是一个工具集，展示命令列表，或直接执行
        elif [[ -d $_curdir/tools/$_action ]]; then
            _tool=$1
            if [[ -z $_tool ]]; then
                echo "Tool List:"
                _list=`find $_curdir/tools/$_action/ -maxdepth 1 -perm -111 -type f`
                cecho -G "$_list"
            else
                shift
                $_curdir/tools/$_action/$_tool "$@"
            fi
        elif [[ -d $_curdir/ext_tools/$_action ]]; then
            _tool=$1
            if [[ -z $_tool ]]; then
                echo "Tool List:"
                _list=`find $_curdir/ext_tools/$_action/ -maxdepth 1 -perm -111 -type f`
                cecho -G "$_list"
            else
                shift
                $_curdir/ext_tools/$_action/$_tool "$@"
            fi
        else
            usage
            exit 1
        fi
        ;;
esac
